 #include <iostream>
 
 
 using namespace std;
 
 
void lux_control(int ini_state[], int days);

 
 int main(){
 	
 	int test[8] = {1,0,0,0,0,1,0,0};
 	int dias =1; 
	
	
 	lux_control(test, dias);
 	
 	cout<< "Arreglo obtenido : {";
 	for(int x = 0 ; x < 8 ; x++)
	{   
	    if(x == 7 ) {
	        cout<<test[ x ];
	        
	    }else{
		    cout<<test[ x ]<<", ";
	    }
	}
	cout<< "}";
 }  
 
 /* 
Codifique una función en C++ para la situación que se describe a continuación:

Un sistema de iluminación automático se implementa a través de 8 salidas del puerto de un microcontrolador, 
las salidas se representan con un arreglo de enteros, cada salida se activa o se desactiva cada día dependiendo 
del estado de las salidas vecinas el día anterior. 

Un valor entero 1 representa una salida de iluminación activa,
el valor 0 representa una salida inactiva. 

Si las salidas vecinas a ambos lados de una salida están ya sea ambas activas o inactivas entonces la salida en cuestión va a estar inactiva el día siguiente, 
de cualquier otra forma la salida estará activa el día siguiente. 

Note que las salidas en los dos extremos del puerto solo tienen una salida vecina, debe asumir entonces que la salida vecina faltante es una salida que siempre está inactiva. 
Todas las salidas se deben actualizar cada día de manera simultánea teniendo en cuenta el estado previo de todas las salidas.

Debe entonces codificar una función que recibe un parámetro entero que representa el número n de días en los que el sistema se va a actualizar; 
y un arreglo de tipo entero con el estado inicial de cada una de las salidas. La función debe almacenar en un arreglo el estado final de las salidas pasados los n días.

Ejemplos:

Días = 1, Estado inicial salidas = [1,0,0,0,0,1,0,0]
Resultado: [0,1,0,0,1,0,1,0]

Días = 2, Estado inicial salidas = [1,1,1,0,1,1,1,1]
Resultado: [0,0,0,0,0,1,1,0]



Criterios de calificación:
-Análisis y solución de la situación problemática. 
-Funcionamiento de la solución.
-Codificación de la solución.

0  0    0
0  1    1
1  0    1
1  1    0
*/

void lux_control(int ini_state[], int days){
		
	int lenght = sizeof(ini_state)/ini_state[0];
	
	int aux_state[8];
	
	
	for(int x = 0 ; x < 8 ; x++)
	{
		aux_state[ x ] = ini_state[ x ];
	}
	
	for(int x = 0; x < days ; x++)
	{
		for(int y = 0 ; y < lenght ; y++ )
		{
			if(y==0)
			{
				ini_state[0]= 0 ^ aux_state[1];
			}
			if(y==7)
			{
				ini_state[7] = aux_state[6] ^ 0;
			}
			if(y!=0 && y!= 7)
			{
				ini_state[y]= aux_state[y-1] ^ aux_state[y+1];
			}
		}
		
		for(int x = 0 ; x < lenght ; x++)
		{
			aux_state[ x ] = ini_state[ x ];
			
		}
		
	}
	return;
}
